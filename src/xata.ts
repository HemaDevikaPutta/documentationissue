// Generated by Xata Codegen 0.26.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "settings",
    columns: [
      { name: "title", type: "string" },
      {
        name: "sponsor1",
        type: "link",
        link: { table: "sponsors" },
        unique: true,
      },
      {
        name: "sponsor2",
        type: "link",
        link: { table: "sponsors" },
        unique: true,
      },
      { name: "guestName", type: "string" },
      { name: "guestTitle", type: "string" },
      { name: "description", type: "text" },
      { name: "sponsor3", type: "link", link: { table: "sponsors" } },
    ],
  },
  {
    name: "sponsors",
    columns: [
      { name: "name", type: "string", defaultValue: "" },
      { name: "logo", type: "file", file: { defaultPublicAccess: true } },
    ],
    revLinks: [
      { column: "sponsor1", table: "settings" },
      { column: "sponsor2", table: "settings" },
      { column: "sponsor3", table: "settings" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Settings = InferredTypes["settings"];
export type SettingsRecord = Settings & XataRecord;

export type Sponsors = InferredTypes["sponsors"];
export type SponsorsRecord = Sponsors & XataRecord;

export type DatabaseSchema = {
  settings: SettingsRecord;
  sponsors: SponsorsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://James-Q-Quick-s-workspace-l5kbra.us-east-1.xata.sh/db/jqq-stream-overlays",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
